# -*- coding: utf-8 -*-
# Âú® `n*m` Â§ßÂ∞èÁöÑÊ£ãÁõò‰∏≠ÔºåÊúâÈªëÁôΩ‰∏§ÁßçÊ£ãÂ≠êÔºåÈªëÊ£ãËÆ∞‰ΩúÂ≠óÊØç `"X"`, ÁôΩÊ£ãËÆ∞‰ΩúÂ≠óÊØç `"O"`ÔºåÁ©∫‰Ωô‰ΩçÁΩÆËÆ∞‰Ωú `"."`„ÄÇÂΩìËêΩ‰∏ãÁöÑÊ£ãÂ≠ê‰∏éÂÖ∂‰ªñÁõ∏ÂêåÈ¢úËâ≤ÁöÑÊ£ã
# Â≠êÂú®Ë°å„ÄÅÂàóÊàñÂØπËßíÁ∫øÂÆåÂÖ®ÂåÖÂõ¥Ôºà‰∏≠Èó¥‰∏çÂ≠òÂú®Á©∫ÁôΩ‰ΩçÁΩÆÔºâÂè¶‰∏ÄÁßçÈ¢úËâ≤ÁöÑÊ£ãÂ≠êÔºåÂàôÂèØ‰ª•ÁøªËΩ¨Ëøô‰∫õÊ£ãÂ≠êÁöÑÈ¢úËâ≤„ÄÇ
#
# ![1.gif](https://pic.leetcode-cn.com/1630396029-eTgzpN-6da662e67368466a96d203
# f67bb6e793.gif){:height=170px}![2.gif](https://pic.leetcode-cn.com/1630396240-
# nMvdcc-8e4261afe9f60e05a4f740694b439b6b.gif){:height=170px}![3.gif](https://pic.
# leetcode-cn.com/1630396291-kEtzLL-6fcb682daeecb5c3f56eb88b23c81d33.gif){:height=170
# px}
#
# „ÄåÂäõÊâ£ÊåëÊàòËµõ„ÄçÈªëÁôΩÁøªËΩ¨Ê£ãÈ°πÁõÆ‰∏≠ÔºåÂ∞ÜÊèê‰æõÁªôÈÄâÊâã‰∏Ä‰∏™Êú™ÂΩ¢ÊàêÂèØÁøªËΩ¨Ê£ãÂ≠êÁöÑÊ£ãÁõòÊÆãÂ±ÄÔºåÂÖ∂Áä∂ÊÄÅËÆ∞‰Ωú `chessboard`„ÄÇËã•‰∏ã‰∏ÄÊ≠•ÂèØÊîæÁΩÆ‰∏ÄÊûöÈªëÊ£ãÔºåËØ∑ÈóÆÈÄâÊâãÊúÄÂ§öËÉΩÁøªËΩ¨
# Â§öÂ∞ëÊûöÁôΩÊ£ã„ÄÇ
#
# **Ê≥®ÊÑèÔºö**
# - Ëã•ÁøªËΩ¨ÁôΩÊ£ãÊàêÈªëÊ£ãÂêéÔºåÊ£ãÁõò‰∏ä‰ªçÂ≠òÂú®ÂèØ‰ª•ÁøªËΩ¨ÁöÑÁôΩÊ£ãÔºåÂ∞ÜÂèØ‰ª• **ÁªßÁª≠** ÁøªËΩ¨ÁôΩÊ£ã
# - ËæìÂÖ•Êï∞ÊçÆ‰øùËØÅÂàùÂßãÊ£ãÁõòÁä∂ÊÄÅÊó†ÂèØ‰ª•ÁøªËΩ¨ÁöÑÊ£ãÂ≠ê‰∏îÂ≠òÂú®Á©∫‰Ωô‰ΩçÁΩÆ
#
# **Á§∫‰æã 1Ôºö**
#
# > ËæìÂÖ•Ôºö`chessboard = ["....X.","....X.","XOOO..","......","......"]`
# >
# > ËæìÂá∫Ôºö`3`
# >
# > Ëß£ÈáäÔºö
# > ÂèØ‰ª•ÈÄâÊã©‰∏ãÂú® `[2,4]` Â§ÑÔºåËÉΩÂ§üÁøªËΩ¨ÁôΩÊñπ‰∏âÊûöÊ£ãÂ≠ê„ÄÇ
#
# **Á§∫‰æã 2Ôºö**
#
# > ËæìÂÖ•Ôºö`chessboard = [".X.",".O.","XO."]`
# >
# > ËæìÂá∫Ôºö`2`
# >
# > Ëß£ÈáäÔºö
# > ÂèØ‰ª•ÈÄâÊã©‰∏ãÂú® `[2,2]` Â§ÑÔºåËÉΩÂ§üÁøªËΩ¨ÁôΩÊñπ‰∏§ÊûöÊ£ãÂ≠ê„ÄÇ
# > ![2126c1d21b1b9a9924c639d449cc6e65.gif](https://pic.leetcode-cn.com/16266832
# 55-OBtBud-2126c1d21b1b9a9924c639d449cc6e65.gif)
#
# **Á§∫‰æã 3Ôºö**
#
# > ËæìÂÖ•Ôºö`chessboard = [".......",".......",".......","X......",".O.....","..O....
# ","....OOX"]`
# >
# > ËæìÂá∫Ôºö`4`
# >
# > Ëß£ÈáäÔºö
# > ÂèØ‰ª•ÈÄâÊã©‰∏ãÂú® `[6,3]` Â§ÑÔºåËÉΩÂ§üÁøªËΩ¨ÁôΩÊñπÂõõÊûöÊ£ãÂ≠ê„ÄÇ
# > ![803f2f04098b6174397d6c696f54d709.gif](https://pic.leetcode-cn.com/16303937
# 70-Puyked-803f2f04098b6174397d6c696f54d709.gif)
#
# **ÊèêÁ§∫Ôºö**
# - `1 <= chessboard.length, chessboard[i].length <= 8`
# - `chessboard[i]` ‰ªÖÂåÖÂê´ `"."„ÄÅ"O"` Âíå `"X"`
#
#  Related Topics ÂπøÂ∫¶‰ºòÂÖàÊêúÁ¥¢ Êï∞ÁªÑ Áü©Èòµ üëç 6 üëé 0


# leetcode submit region begin(Prohibit modification and deletion)
from typing import List
from copy import deepcopy


class Solution:
    def flipChess(self, chessboard: List[str]) -> int:
        dirs = [(1, 0), (-1, 0), (0, 1), (0, -1), (1, 1), (-1, -1), (1, -1), (-1, 1)]
        R, C = len(chessboard), len(chessboard[0])
        chessboard = [list(row) for row in chessboard]

        def dfs(board):
            board_backup = deepcopy(board)
            res = 0
            for r in range(R):
                for c in range(C):
                    if board[r][c] == '.':
                        tmp = 0
                        board[r][c] = 'X'
                        tmp += get_white_count(board, r, c)
                        if tmp != 0:
                            # tmp += dfs(board)
                            res = max(res, tmp)
                        board = deepcopy(board_backup)
            return res

        def get_white_count(board, r, c):
            count = 0
            candidates = []
            for dr, dc in dirs:
                nr, nc = r + dr, c + dc
                tmp_cnt = 0
                tmp_cnadidates = []
                while 0 <= nr < R and 0 <= nc < C and board[nr][nc] == 'O':
                    tmp_cnt += 1
                    tmp_cnadidates.append((nr, nc))
                    nr += dr
                    nc += dc
                if 0 <= nr < R and 0 <= nc < C and board[nr][nc] == 'X':
                    count += tmp_cnt
                    candidates.extend(tmp_cnadidates)
            for r, c in candidates:
                board[r][c] = 'X'
            for r, c in candidates:
                count += get_white_count(board, r, c)
            return count

        return dfs(chessboard)


# leetcode submit region end(Prohibit modification and deletion)
print(Solution().flipChess([".O..","XOO.",".XO."]))
# authorÔºö caoji
# datetimeÔºö 2022-08-26 1:00 
# ideÔºö PyCharm
