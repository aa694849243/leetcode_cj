# -*- coding: utf-8 -*-
# Êüê‰πêÂõ¢ÁöÑÊºîÂá∫Âú∫Âú∞ÂèØËßÜ‰Ωú `num * num` ÁöÑ‰∫åÁª¥Áü©Èòµ `grid`ÔºàÂ∑¶‰∏äËßíÂùêÊ†á‰∏∫ `[0,0]`)ÔºåÊØè‰∏™‰ΩçÁΩÆÁ´ôÊúâ‰∏Ä‰ΩçÊàêÂëò„ÄÇ‰πêÂõ¢ÂÖ±Êúâ `9` Áßç‰πêÂô®Ôºå‰πê
# Âô®ÁºñÂè∑‰∏∫ `1~9`ÔºåÊØè‰ΩçÊàêÂëòÊåÅÊúâ `1` ‰∏™‰πêÂô®„ÄÇ
#
# ‰∏∫‰øùËØÅÂ£∞‰πêÊ∑∑ÂêàÊïàÊûúÔºåÊàêÂëòÁ´ô‰ΩçËßÑÂàô‰∏∫ÔºöËá™ `grid` Â∑¶‰∏äËßíÂºÄÂßãÈ°∫Êó∂ÈíàËû∫ÊóãÂΩ¢ÂêëÂÜÖÂæ™ÁéØ‰ª• `1Ôºå2Ôºå...Ôºå9` Âæ™ÁéØÈáçÂ§çÊéíÂàó„ÄÇ‰æãÂ¶ÇÂΩì num = `5` Êó∂
# ÔºåÁ´ô‰ΩçÂ¶ÇÂõæÊâÄÁ§∫
#
# ![image.png](https://pic.leetcode-cn.com/1616125411-WOblWH-image.png)
#
#
# ËØ∑ËøîÂõû‰Ωç‰∫éÂú∫Âú∞ÂùêÊ†á [`Xpos`,`Ypos`] ÁöÑÊàêÂëòÊâÄÊåÅ‰πêÂô®ÁºñÂè∑„ÄÇ
#
# **Á§∫‰æã 1Ôºö**
# >ËæìÂÖ•Ôºö`num = 3, Xpos = 0, Ypos = 2`
# >
# >ËæìÂá∫Ôºö`3`
# >
# >Ëß£ÈáäÔºö
# ![image.png](https://pic.leetcode-cn.com/1616125437-WUOwsu-image.png)
#
#
# **Á§∫‰æã 2Ôºö**
# >ËæìÂÖ•Ôºö`num = 4, Xpos = 1, Ypos = 2`
# >
# >ËæìÂá∫Ôºö`5`
# >
# >Ëß£ÈáäÔºö
# ![image.png](https://pic.leetcode-cn.com/1616125453-IIDpxg-image.png)
#
#
# **ÊèêÁ§∫Ôºö**
# - `1 <= num <= 10^9`
# - `0 <= Xpos, Ypos < num` Related Topics Êï∞Â≠¶
#  üëç 37 üëé 0


class Solution:
    def orchestraLayout(self, num: int, xPos: int, yPos: int) -> int:
        layer = min(xPos, yPos, num - 1 - xPos, num - 1 - yPos)
        x_min = min(layer, num - 1 - layer)
        x_max = max(layer, num - 1 - layer)
        y_min = min(layer, num - 1 - layer)
        y_max = max(layer, num - 1 - layer)
        cnt = 0
        cnt += 2 * layer * num
        cnt += (num - (y_max - y_min + 1)) * (x_max - x_min + 1)
        if xPos == x_min:
            cnt += (yPos - y_min + 1)
        elif xPos == x_max:
            cnt += (y_max - y_min + x_max - x_min) + (y_max - y_min + 1) - (yPos - y_min)
        elif yPos == y_min:
            cnt += 2 * (y_max - y_min) + (x_max - x_min) + (x_max - x_min + 1) - (xPos - x_min)
        else:
            cnt += y_max - y_min + xPos - x_min + 1
        cnt %= 9
        return cnt if cnt!=0 else 9


Solution().orchestraLayout(7, 3, 4)
